import { getGroqApiKey } from './util.js';
import Groq from 'groq-sdk';

const groq = new Groq({ apiKey: getGroqApiKey() });

export async function generateRecipe(ingredients: string): Promise<string> {
  const chatCompletion = await getGroqChatCompletionRecipe(ingredients);
  const recipe = chatCompletion.choices[0]?.message?.content;
  if (!recipe) {
    throw new Error('No recipe was generated by the model.');
  }
  return recipe.trim();
}

async function getGroqChatCompletionRecipe(ingredients: string) {
  return groq.chat.completions.create({
    messages: [
      {
        role: 'system',
        content: `You are a recipe generator. Generate exactly 4 unique and detailed recipes based on the provided ingredients. 

CRITICAL: Respond ONLY with valid JSON. Do not include any explanatory text, markdown formatting, or anything other than the JSON array.

The response must be a JSON array of exactly 4 recipe objects in this format:
[
  {
    "title": "Recipe Name",
    "description": "Brief description of the dish",
    "ingredients": [
      {
        "name": "ingredient name",
        "quantity": "amount",
        "unit": "measurement unit"
      }
    ],
    "instructions": [
      "Step 1 instruction",
      "Step 2 instruction"
    ]
  }
]

Rules:
- Always return exactly 4 different recipes
- Put all quantities in quotes (e.g., "1/2", "2", "to taste")
- Include realistic cooking instructions
- Make recipes diverse and interesting
- No text outside the JSON array`,
      },
      {
        role: 'user',
        content: `Create 4 recipes using these ingredients: ${ingredients}`,
      },
    ],
    model: "llama3-8b-8192",
    temperature: 0.7,
    max_completion_tokens: 3000, // Increased for 4 recipes
    top_p: 1,
    stream: false,
    stop: null,
  });
}